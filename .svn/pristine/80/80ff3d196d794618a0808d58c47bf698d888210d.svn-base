<template>
	<div class="inquiry-wrapper">
		<div class="inquiry-top container-fluid">
			<div class="row mgb10">
				<div class="col-md-3">
					<label>门店编号：</label>
					<input type="text" name="" placeholder="" v-model="param.storeNum" />
				</div>
				<div class="col-md-3">
					<label>门店名称：</label>
					<input type="text" name="" placeholder="" v-model="param.storeName" />
				</div>
				<!--<div class="col-md-3">
					<label>销售主管：</label>
					<select v-model="param.salesId">
						<option value="" selected="selected">不限</option>
						<option v-for="n in executive" :value="n.employeeId">{{n.employeeName}}</option>
					</select>
				</div>-->
				<div class="col-md-3">
					<button type="button" class="btn btn-primary" @click="refresh">查询</button>
				</div>
			</div>
			<!--<div class="row">
				<div class="col-md-3">
					<label>店长：</label>
					<select v-model="param.ownerId">
						<option value="" selected="selected">不限</option>
						<option v-for="n in buinours" :value="n.employeeId">{{n.employeeName}}</option>
					</select>
				</div>
				<div class="col-md-3">
					<label>等级：</label>
					<select v-model="param.yearLevel">
						<option value="" selected="selected">不限</option>
						<option v-for="n in grades" :value="n.levelId">{{n.levelName}}</option>
					</select>
				</div>
				<div class="col-md-3">
					<button type="button" class="btn btn-primary" @click="refresh">查询</button>
				</div>
			</div>-->
			<div class="clearfix"></div>
		</div>

		<div class="col-md-10">
			<div class="col-md-12 pb10">
				<span class="fn-left mgt5">查询结果（{{counts}}）</span>
				<!--<button type="button" class="btn btn-primary fn-right">导出数据</button>-->
			</div>
			<div class="col-md-12">
				<table class="table table-bordered normall-table table-hover">
					<tr>
						<th>门店ID</th>
						<th>门店编号</th>
						<th>门店名称</th>
						<th>所属大区</th>
						<th>管理模式</th>
						<th>编制人数</th>
						<th>大区经理</th>
						<th>城市经理</th>
						<th>大店长</th>
						<th>店长</th>
						<th>销售主管</th>
						<th>零售助理</th>
						<th>门店等级(年销售额)</th>
						<th>创建日期</th>
					</tr>
					<tr v-for="list in lists">
						<td>{{list.storeId}}</td>
						<td>{{list.storeNum}}</td>
						<td>{{list.storeName}}</td>
						<td>{{list.areaName}}</td>
						<td>{{list.storeType}}</td>
						<td>{{list.employeeCount}}</td>
						<td>{{list.dqOwnerName}}</td>
						<td>{{list.csOwnerName}}</td>
						<td>{{list.dOwnerName}}</td>
						<td>{{list.ownerName}}</td>
						<td>{{list.salesName}}</td>
						<td>{{list.retailName}}</td>
						<td>{{list.yearLevelName}}</td>
						<td>{{list.storeTime}}</td>
					</tr>
				</table>
				<!--分页-->
				<button class="btn btn-default fn-left" @click="refresh" v-show="counts>0">刷新</button>
				<boot-page v-show="counts>0" ref="page" :async="true" :data="lists" :len="10" :url="url" :page-len="pageLen" :param="param" v-on:listenToChildEvent="showMsgFormChild"></boot-page>								
				<!--/分页-->	
				<div v-show="counts==0">
					<p class="text-muted am-ft-center mgt20">暂无数据</p>
				</div>
			</div>
		</div>
		<div class="clearfix"></div>
	</div>
</template>

<script>
	import bootPage from '../pagination.vue'
	export default {
		 data () {
	        return {
	            counts: '',
				lenArr: [10], // 每页显示长度设置
	            pageLen: 10, // 可显示的分页数
	            url: '/api/store/getStoreList', // 请求路径
	            param: {
	            	storeNum: '',
					storeName: '',
					salesId: '',
					ownerId: "",
					yearLevel: '',
					nub: '0',
					size: '10'
	            }, // 传递参数
	            lists: [], // 分页组件传回的分页后数据
	            grades: [],
	            buinours: [],
	            executive: []
	        }
	    },
	    created() {
	      this.$nextTick(() => {
	        this.refresh()
	      })
	      this.getGrades(),
	      this.getBuinour(),
	      this.getExecutive()
		  if(JSON.parse(sessionStorage.userInfo)[0].type==0){}else{
		  	this.param.ownerId=JSON.parse(sessionStorage.userInfo)[0].employeeNum
		  }
		},
	    components: {
	        bootPage
	  	},
		methods: {
           	refresh () {
           		var that = this;
	            that.$refs.page.refresh()
	        },
			showMsgFormChild: function(data){
				console.info(data)
	            this.lists = data.storeList;	
	            this.counts = data.count;
			},
			//查询等级
			getGrades(){
				var that = this;
				that.$axios({
                    url: '/api/level/getLevelList', 
                    method: 'post',
                    params: {
                    	jsonObject: {}
                    }
                })
				.then(function (response) {
			        that.grades = response.data.t
			    })
			      .catch(function (error) {
			        console.info(error)
			    })
			},
			//查询店长
			getBuinour(){
				var that = this;
				that.$axios({
                    url: '/api/employee/getEmployeeList', 
                    method: 'post',
                    params: {
                    	jsonObject: {'type':'3'}
                    }
                })
				.then(function (response) {
//					console.info(response.data.t)
			        that.buinours = response.data.t.employeeList
			    })
			      .catch(function (error) {
			        console.info(error)
			    })
			},
			//查询销售主管
			getExecutive(){
				var that = this;
				that.$axios({
                    url: '/api/employee/getEmployeeList', 
                    method: 'post',
                    params: {
                    	jsonObject: {'type':'2'}
                    }
                })
				.then(function (response) {
//					console.info(response.data.t)
			        that.executive = response.data.t.employeeList
			    })
			      .catch(function (error) {
			        console.info(error)
			    })
			}
		},
		events: {
	        // 刷新数据
	        'refresh' () {
	            this.refresh()
	        }
	    }
	}
</script>
<style scoped>
.normall-table tr td {
    max-width: 120px;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}
</style>